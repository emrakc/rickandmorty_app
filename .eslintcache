[{"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\reportWebVitals.js":"1","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\App.js":"2","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CaracterDetail\\index.js":"3","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\index.js":"4","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CaracterDetail\\episodeList.js":"5","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CharacterList\\index.js":"6","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\Context\\MenuContext.js":"7","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CharacterList\\menuItem.js":"8","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\index.js":"9","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\App.js":"10","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\reportWebVitals.js":"11","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\Context\\MenuContext.js":"12","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CharacterList\\index.js":"13","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CaracterDetail\\index.js":"14","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CharacterList\\menuItem.js":"15","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CaracterDetail\\episodeList.js":"16"},{"size":362,"mtime":1607971456713,"results":"17","hashOfConfig":"18"},{"size":2721,"mtime":1608410392560,"results":"19","hashOfConfig":"18"},{"size":5679,"mtime":1608454772988,"results":"20","hashOfConfig":"18"},{"size":593,"mtime":1608213587085,"results":"21","hashOfConfig":"18"},{"size":1886,"mtime":1608383889001,"results":"22","hashOfConfig":"18"},{"size":6090,"mtime":1608411210361,"results":"23","hashOfConfig":"18"},{"size":723,"mtime":1608410892388,"results":"24","hashOfConfig":"18"},{"size":1350,"mtime":1608411903333,"results":"25","hashOfConfig":"18"},{"size":593,"mtime":1608213587085,"results":"26","hashOfConfig":"27"},{"size":2721,"mtime":1608456871453,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607971456713,"results":"29","hashOfConfig":"27"},{"size":723,"mtime":1608410892388,"results":"30","hashOfConfig":"27"},{"size":6090,"mtime":1608411210361,"results":"31","hashOfConfig":"27"},{"size":5679,"mtime":1608454772988,"results":"32","hashOfConfig":"27"},{"size":1350,"mtime":1608411903333,"results":"33","hashOfConfig":"27"},{"size":1886,"mtime":1608383889001,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1o3kecf",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4wpgw1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\reportWebVitals.js",[],["71","72"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\App.js",["73","74"],"\nimport React from 'react'\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { HttpLink } from 'apollo-link-http'\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CharacterDetail from './components/CaracterDetail'\nimport CharacterListMenu from './components/CharacterList'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport background from \"./img/bg.jpg\";\nimport MenuContextProvider from './Context/MenuContext'\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#282c34',\n    },\n    secondary: {\n      main: '#983334'\n    }\n  },\n  overrides: {\n    MuiTypography: {\n      root: {\n        color: '#818181'\n      }\n    },\n    MuiButton: {\n      root: {\n        borderRadius: \"16px\",\n        fontSize: \"1.15rem\",\n        fontWeight: 700\n      },\n      containedPrimary: {\n        color: 'white'\n      },\n      containedSecondary: {\n        color: '#818181'\n      }\n    },\n    MuiDrawer: {\n      paper: {\n        overflowX: 'hidden'\n      }\n    },\n    MuiAvatar: {\n      root: {\n        width: '60px',\n        height: '60px',\n        borderRadius: '30%'\n      }\n    },\n    MuiListItemText: {\n      multiline: {\n        marginTop: '7px',\n        marginLeft: '17px'\n      }\n    },\n\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#fff\",\n    minHeight: '100vh',\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"start\",\n    justifyContent: \"start\",\n    width: \"100%\",\n    height: \"100vh\",\n    position: \"relative\",\n    backgroundImage: `url(${background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPositionX: \"center\",\n    backgroundPositionY: \"center\",\n\n  },\n  drawer: { \n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    display: \"flex\",\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <MenuContextProvider> \n          <div className={classes.root}>\n            <nav className={classes.drawer} >\n              <CharacterListMenu />\n            </nav>\n            <div className={classes.content}>\n              <Switch>\n                <Route exact path=\"/character/:id\" component={CharacterDetail} />\n              </Switch>\n            </div>\n          </div>\n        </MenuContextProvider>\n      </ApolloProvider>\n    </ThemeProvider >\n\n  );\n}\n\nexport default App;\n","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CaracterDetail\\index.js",["75","76","77","78","79","80","81"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\index.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CaracterDetail\\episodeList.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CharacterList\\index.js",["82","83","84","85","86"],"\r\nimport React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMenuContext } from '../../Context/MenuContext';\r\nimport MenuItem from './menuItem';\r\n\r\nconst GET_CHARS_QUERY = gql`\r\nquery AllCharacters($page: Int){\r\n    characters(page: $page) {\r\n      info {\r\n        count\r\n        pages\r\n        next\r\n        prev\r\n      }\r\n     results {\r\n         id\r\n         status\r\n         name\r\n        image\r\n     }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n\r\n    drawer: { \r\n        display:'flex',\r\n        flexShrink: 0, \r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: 340,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: '105px',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst CharacterListMenu = () => {\r\n    const { data, error, loading, fetchMore } = useQuery(\r\n        GET_CHARS_QUERY\r\n    )\r\n    const {selectedCharacterId} = useMenuContext();\r\n    const [drawerStatus, setDrawerStatus] = useState(true);\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory(); \r\n    const characters = data?.characters.results || [];\r\n    const menuItemContainerRef = React.createRef(null);\r\n   \r\n\r\n    useEffect(() => {\r\n        if (selectedCharacterId)\r\n            handleCharacterChange(selectedCharacterId)\r\n    }, [selectedCharacterId])\r\n\r\n    const onUpdate = (prev, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult) return prev;\r\n        const info = fetchMoreResult.characters.info;\r\n        const results = [\r\n            ...prev.characters.results,\r\n            ...fetchMoreResult.characters.results,\r\n        ];\r\n        return Object.assign({}, prev, {\r\n            characters: {\r\n                __typename: \"Characters\",\r\n                results,\r\n                info,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleCharacterChange = (id) => {\r\n        let nextId = null;\r\n        let prevId = null;\r\n        let findIndex = characters.findIndex(c => c.id == id);\r\n        if (findIndex > 0)\r\n            prevId = characters[findIndex - 1].id;\r\n        debugger;\r\n        if (findIndex < characters.length)\r\n            nextId = characters[findIndex + 1].id;\r\n\r\n        history.push(`/character/${id}`, {\r\n            id,\r\n            nextId,\r\n            prevId\r\n        });\r\n\r\n        const scrollDom = menuItemContainerRef.current.scrollComponent;\r\n        const childrens = Array.from(scrollDom.children);\r\n        let selectedNode = childrens.find(c => c.attributes['data-id'].value == id);\r\n        let oldSelectedNode = childrens.find(c => c.className == 'selected-menu-item');\r\n        if (selectedNode) {\r\n            selectedNode.classList.add('selected-menu-item');\r\n            if (oldSelectedNode) oldSelectedNode.classList.remove('selected-menu-item');\r\n            let scrTopPosition = scrollDom.offsetParent.scrollTop;\r\n            let scrBottomPosition = scrollDom.offsetParent.scrollTop + scrollDom.offsetParent.offsetHeight\r\n            if (scrTopPosition > selectedNode.offsetTop || scrBottomPosition < selectedNode.offsetTop) {\r\n                selectedNode.scrollIntoView(true)\r\n            }\r\n        }  \r\n    }\r\n\r\n    const getNewCharacters = async () => {\r\n        if (data) {\r\n            return await fetchMore({\r\n                variables: {\r\n                    page: data.characters.info.next,\r\n                },\r\n                updateQuery: onUpdate,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Drawer\r\n                onMouseEnter={()=>{setDrawerStatus(true)}}\r\n                onMouseLeave={()=>{setDrawerStatus(false)}}\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: drawerStatus,\r\n                    [classes.drawerClose]: !drawerStatus,\r\n                })}\r\n                open={drawerStatus}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: drawerStatus,\r\n                        [classes.drawerClose]: !drawerStatus,\r\n                    }),\r\n                }}\r\n            >\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    ref={menuItemContainerRef}\r\n                    style={{ position: 'relative' }}\r\n                    loadMore={getNewCharacters}\r\n                    hasMore={data?.characters.info.next}\r\n                    loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n                    useWindow={false}\r\n                >\r\n                    {loading && <p style={{ direction: 'ltr' }}>Loading...</p>}\r\n                    {error && <p >!--Error--!</p>}\r\n\r\n                    {\r\n                        characters\r\n                            ? characters.map((char, i) => (\r\n                                <MenuItem\r\n                                    key={char.id}\r\n                                    order={i}\r\n                                    onCharacherChange={handleCharacterChange}\r\n                                    {...char}\r\n                                />\r\n                            ))\r\n                            : null\r\n                    }\r\n                </InfiniteScroll>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default CharacterListMenu;","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\Context\\MenuContext.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rick-and-morty-app\\src\\components\\CharacterList\\menuItem.js",["87","88"],"import { useSpring, animated } from 'react-spring'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useRef, useEffect } from 'react'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    }, \r\n}));\r\n\r\nconst MenuItem = ({ name, status, image, id, order,  onCharacherChange }) => {\r\n    const classes = useStyles();\r\n    const itemRef = useRef()\r\n    const props = useSpring({\r\n        to: { opacity: 1, bottom: '0', position: 'relative' },\r\n        from: { opacity: 0, bottom: '-100px', position: 'relative' },\r\n        delay: 180 * (order % 20)\r\n    }) \r\n\r\n    return (\r\n        <animated.div style={props} data-id={id}   >\r\n            <ListItem ref={itemRef} onClick={() => { onCharacherChange(id); }}    >\r\n                <ListItemAvatar>\r\n                    <Avatar alt={name}  src={image} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={`#${id}   ${name} `}\r\n                    secondary={status}\r\n                />\r\n            </ListItem>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default MenuItem;","C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\index.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\App.js",["89","90"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\reportWebVitals.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\Context\\MenuContext.js",[],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CharacterList\\index.js",["91","92","93","94","95"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CaracterDetail\\index.js",["96","97","98","99","100","101","102"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CharacterList\\menuItem.js",["103","104"],"C:\\Users\\emrah.akcelik.ITPORTER\\Desktop\\react-study\\rickandmorty_app\\src\\components\\CaracterDetail\\episodeList.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":9,"column":3,"nodeType":"111","messageId":"112","endLine":9,"endColumn":7},{"ruleId":"109","severity":1,"message":"114","line":3,"column":17,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"115","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":3,"column":38,"nodeType":"111","messageId":"112","endLine":3,"endColumn":44},{"ruleId":"109","severity":1,"message":"117","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":12,"column":22,"nodeType":"111","messageId":"112","endLine":12,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":69,"column":9,"nodeType":"121","messageId":"122","endLine":69,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":92,"column":62,"nodeType":"125","endLine":92,"endColumn":83},{"ruleId":"109","severity":1,"message":"126","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":79,"column":8,"nodeType":"129","endLine":79,"endColumn":29,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":100,"column":56,"nodeType":"133","messageId":"122","endLine":100,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":115,"column":78,"nodeType":"133","messageId":"122","endLine":115,"endColumn":80},{"ruleId":"131","severity":1,"message":"132","line":116,"column":63,"nodeType":"133","messageId":"122","endLine":116,"endColumn":65},{"ruleId":"109","severity":1,"message":"115","line":7,"column":25,"nodeType":"111","messageId":"112","endLine":7,"endColumn":34},{"ruleId":"109","severity":1,"message":"134","line":18,"column":11,"nodeType":"111","messageId":"112","endLine":18,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":9,"column":3,"nodeType":"111","messageId":"112","endLine":9,"endColumn":7},{"ruleId":"109","severity":1,"message":"126","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":79,"column":8,"nodeType":"129","endLine":79,"endColumn":29,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":100,"column":56,"nodeType":"133","messageId":"122","endLine":100,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":115,"column":78,"nodeType":"133","messageId":"122","endLine":115,"endColumn":80},{"ruleId":"131","severity":1,"message":"132","line":116,"column":63,"nodeType":"133","messageId":"122","endLine":116,"endColumn":65},{"ruleId":"109","severity":1,"message":"114","line":3,"column":17,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"115","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":3,"column":38,"nodeType":"111","messageId":"112","endLine":3,"endColumn":44},{"ruleId":"109","severity":1,"message":"117","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":12,"column":22,"nodeType":"111","messageId":"112","endLine":12,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":69,"column":9,"nodeType":"121","messageId":"122","endLine":69,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":92,"column":62,"nodeType":"125","endLine":92,"endColumn":83},{"ruleId":"109","severity":1,"message":"115","line":7,"column":25,"nodeType":"111","messageId":"112","endLine":7,"endColumn":34},{"ruleId":"109","severity":1,"message":"134","line":18,"column":11,"nodeType":"111","messageId":"112","endLine":18,"endColumn":18},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'HttpLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Paper' is defined but never used.","'useTheme' is defined but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCharacterChange'. Either include it or remove the dependency array.","ArrayExpression",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'classes' is assigned a value but never used.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [handleCharacterChange, selectedCharacterId]",{"range":"143","text":"144"},{"range":"145","text":"144"},[2094,2115],"[handleCharacterChange, selectedCharacterId]",[2094,2115]]